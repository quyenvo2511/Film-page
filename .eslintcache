[{"/Users/quyen/Downloads/film/src/index.js":"1","/Users/quyen/Downloads/film/src/App.js":"2","/Users/quyen/Downloads/film/src/reportWebVitals.js":"3","/Users/quyen/Downloads/film/src/components/NaviBar.js":"4","/Users/quyen/Downloads/film/src/components/SearchForm.js":"5","/Users/quyen/Downloads/film/src/components/MenuSide.js":"6","/Users/quyen/Downloads/film/src/pages/Homepage.js":"7","/Users/quyen/Downloads/film/src/pages/FavoList.js":"8","/Users/quyen/Downloads/film/src/pages/DetailPage.js":"9","/Users/quyen/Downloads/film/src/DataFetcher.js":"10","/Users/quyen/Downloads/film/src/components/PaginationBar.js":"11","/Users/quyen/Downloads/film/src/components/Filter.js":"12","/Users/quyen/Downloads/film/src/components/AlertMsg.js":"13","/Users/quyen/Downloads/film/src/apiService.js":"14"},{"size":500,"mtime":1607240188000,"results":"15","hashOfConfig":"16"},{"size":622,"mtime":1607312501929,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1607240188000,"results":"18","hashOfConfig":"16"},{"size":924,"mtime":1607242358000,"results":"19","hashOfConfig":"16"},{"size":509,"mtime":1607240188000,"results":"20","hashOfConfig":"16"},{"size":323,"mtime":1607304348771,"results":"21","hashOfConfig":"16"},{"size":2877,"mtime":1607316054994,"results":"22","hashOfConfig":"16"},{"size":1999,"mtime":1612536637059,"results":"23","hashOfConfig":"16"},{"size":6362,"mtime":1612528444193,"results":"24","hashOfConfig":"16"},{"size":392,"mtime":1607594412096,"results":"25","hashOfConfig":"16"},{"size":1637,"mtime":1607249428000,"results":"26","hashOfConfig":"16"},{"size":1876,"mtime":1607275112719,"results":"27","hashOfConfig":"16"},{"size":323,"mtime":1607311872539,"results":"28","hashOfConfig":"16"},{"size":1164,"mtime":1607315565680,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"19wun6w",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/quyen/Downloads/film/src/index.js",[],["61","62"],"/Users/quyen/Downloads/film/src/App.js",[],"/Users/quyen/Downloads/film/src/reportWebVitals.js",[],"/Users/quyen/Downloads/film/src/components/NaviBar.js",[],"/Users/quyen/Downloads/film/src/components/SearchForm.js",[],"/Users/quyen/Downloads/film/src/components/MenuSide.js",[],"/Users/quyen/Downloads/film/src/pages/Homepage.js",["63"],"import NaviBar from \"../components/NaviBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SearchForm from \"../components/SearchForm\";\nimport MenuSide from \"../components/MenuSide\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport PaginationBar from \"../components/PaginationBar\";\nimport api from \"../apiService\";\n\n// } from \"../Sorting\";\n\nconst POSTER_BASE_URL = process.env.REACT_APP_POSTER_BASE_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst HomePage = () => {\n  const [movieList, setMovieList] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  /// capture searchConfirm\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [pageNum, setPageNum] = useState(1);\n  const totalPage = 50;\n  ///\n\n  const history = useHistory();\n\n  const updateSearchTerm = (newSearchTerm) => {\n    setSearchTerm(newSearchTerm);\n    console.log(searchTerm);\n  };\n\n  const performSearch = async (e) => {\n    e.preventDefault();\n    setConfirm(searchTerm);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setIsLoading(true);\n        let url = `movie/now_playing?page=${pageNum}`;\n        if (confirm) {\n          url = `search/movie?language=en-US&page=1&query=${confirm}`;\n        }\n        const data = await api.get(url);\n        console.log(data);\n        setMovieList(data.data.results);\n        setIsLoading(false);\n      } catch (error) {\n        window.alert(\"Not found\");\n      }\n    };\n    getData();\n  }, [pageNum, confirm]);\n\n  const handleCardClick = (movieId) => {\n    history.push(`/movies/${movieId}`);\n  };\n\n  return (\n    <div className=\"container-1\">\n      <section className=\"search-section\">\n        <NaviBar />\n        <SearchForm\n          performSearch={performSearch}\n          updateSearchTerm={updateSearchTerm}\n        />\n      </section>\n\n      <div className=\"row\">\n        <div className=\"left-side col-2\">\n          <MenuSide movieList={movieList} setMovieList={setMovieList} />\n        </div>\n        <div className=\"right-side col-10 d-flex\">\n          {isLoading ? (\n            <p>Loading</p>\n          ) : (\n            movieList?.map((item) => (\n              <Card\n                className=\"every-card\"\n                onClick={() => handleCardClick(item.id)}\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src={`${POSTER_BASE_URL}${item.poster_path}`}\n                />\n              </Card>\n            ))\n          )}\n        </div>\n        <div className=\"pagination\">\n          <PaginationBar\n            pageNum={pageNum}\n            totalPageNum={totalPage}\n            setPageNum={setPageNum}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/quyen/Downloads/film/src/pages/FavoList.js",["64"],"/Users/quyen/Downloads/film/src/pages/DetailPage.js",["65"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NaviBar from \"../components/NaviBar\";\nimport { Card, Breadcrumb, Button, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AlertMsg from \"../components/AlertMsg\";\nimport { toast } from \"react-toastify\";\nimport api from \"../apiService\";\n\nimport { getMovieDetailData } from \"../DataFetcher\";\n\nconst posterUrl = process.env.REACT_APP_POSTER_BASE_URL;\nconst TRAILER_BASE_URL = \"https://www.youtube.com/embed/\";\nconst DetailPage = () => {\n  const [movieTrailer, setMovieTrailer] = useState(null);\n  const [movieDetail, setMovieDetail] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [reviewList, setReviewList] = useState([]);\n  const [showTrailer, setShowTrailer] = useState(false);\n\n  const params = useParams();\n  const MOVIE_ID = params.id;\n  const handleCloseTrailer = () => {\n    setShowTrailer(false);\n  };\n\n  const handleOpenTrailer = () => {\n    setShowTrailer(true);\n  };\n\n  const getMovieDetail = async () => {\n    try {\n      setIsLoading(true);\n      const movie = await getMovieDetailData(MOVIE_ID);\n\n      setMovieDetail(movie.data);\n      setIsLoading(false);\n    } catch (error) {\n      window.alert(\"not found\");\n    }\n  };\n\n  const getReview = async () => {\n    try {\n      setIsLoading(true);\n\n      const API_URL = `movie/${MOVIE_ID}/reviews?language=en-US&page=1`;\n      const data = await api.get(API_URL);\n      setReviewList(data.data.results);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(\"Not found\");\n    }\n  };\n\n  const getTrailer = async () => {\n    try {\n      setIsLoading(true);\n      const API_URL = `movie/${MOVIE_ID}/videos?language=en-US`;\n      const res = await api.get(API_URL);\n      console.log(\"movies trailer\", res.data.results[0].key);\n      //\n      setMovieTrailer(res.data.results);\n    } catch (error) {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isLoading) {\n      getMovieDetail();\n      getTrailer();\n    } else {\n      getReview();\n    }\n  }, []);\n\n  return isLoading ? (\n    <>\n      <p>Loading</p>\n    </>\n  ) : (\n    <>\n      <div className=\"control-detailpage\">\n        <div className=\"nav-bar-1\">\n          <NaviBar />\n        </div>\n        <div className=\"link\">\n          <Breadcrumb>\n            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n            <Breadcrumb.Item href=\"#\">\n              {movieDetail.original_title}\n            </Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n        <section className=\"all-in\">\n          <div className=\"Detail-film d-flex\">\n            <div className=\"col-6 photo\">\n              <Card.Img\n                variant=\"top\"\n                src={`${posterUrl}${movieDetail.poster_path}`}\n              />\n            </div>\n            <div className=\"col-6 infor\">\n              <span className=\"type-film\">{movieDetail.genres[0].name}</span>\n              <div className=\"movie-title\">\n                <h1>{movieDetail.original_title}</h1>\n                <h4>{movieDetail.tagline}</h4>\n              </div>\n              <div className=\"d-flex control\">\n                <div>\n                  <i class=\"fab fa-imdb imb-icon\" aria-hidden=\"true\">\n                    <span class=\"imb-score\">{movieDetail.vote_average}</span>\n                  </i>\n                </div>\n                <div>\n                  <i class=\"fas fa-users users-icon\" aria-hidden=\"true\">\n                    <span class=\"imb-score-1\">{movieDetail.popularity}</span>\n                  </i>\n                </div>\n              </div>\n              <div className=\"text-group\">\n                <p>\n                  <b>Release Date: </b>\n                  {movieDetail.release_date}\n                </p>\n                <p>\n                  <b>Time remaining: </b>\n                  {movieDetail.runtime} minutes\n                </p>\n                <p>\n                  <b>Languages: </b>\n                  {movieDetail.spoken_languages[0].english_name}\n                </p>\n              </div>\n              <div className=\"control-fav-list\">\n                <Button className=\"button-trailer\" onClick={handleOpenTrailer}>\n                  Trailer\n                </Button>\n                <button\n                  class=\"details-action-icon\"\n                  onClick={() => {\n                    const movieAdded = sessionStorage.getItem(MOVIE_ID);\n                    if (movieAdded !== null) {\n                      toast.info(\"The movie is already added to My List\");\n                    } else {\n                      sessionStorage.setItem(MOVIE_ID, MOVIE_ID);\n                      toast.success(\"added\");\n                    }\n                  }}\n                >\n                  <AlertMsg />\n                  <i className=\"fas fa-heart black\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"cmt\">\n          <div className=\"overview\">\n            <h2>Overview</h2>\n            <p>{movieDetail.overview}</p>\n          </div>\n          <div className=\"comment-review\">\n            <h2>Review ({reviewList.length})</h2>\n            {reviewList.map((review) => (\n              <div>\n                <h2>{review.author_details.username}</h2>\n                <p>{review.content}</p>\n              </div>\n            ))}\n          </div>\n        </section>\n      </div>\n      <Modal show={showTrailer} size=\"xl\" onHide={handleCloseTrailer}>\n        <Modal.Header closeButton>\n          <Modal.Title>{movieDetail.original_title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {movieTrailer ? (\n            <iframe\n              src={`${TRAILER_BASE_URL}${movieTrailer[0].key}`}\n              width=\"100%\"\n              height=\"900\"\n              frameBorder=\"0\"\n              allow=\"autoplay; encrypted-media\"\n              allowFullScreen\n              title=\"video\"\n            />\n          ) : (\n            <p>No Trailer Found For This Movie</p>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseTrailer}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default DetailPage;\n","/Users/quyen/Downloads/film/src/DataFetcher.js",[],"/Users/quyen/Downloads/film/src/components/PaginationBar.js",[],"/Users/quyen/Downloads/film/src/components/Filter.js",[],"/Users/quyen/Downloads/film/src/components/AlertMsg.js",[],"/Users/quyen/Downloads/film/src/apiService.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":14,"column":7,"nodeType":"72","messageId":"73","endLine":14,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":33,"column":6,"nodeType":"76","endLine":33,"endColumn":8,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":77,"column":6,"nodeType":"76","endLine":77,"endColumn":8,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'API_KEY' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadingFav'. Either include it or remove the dependency array.","ArrayExpression",["82"],"React Hook useEffect has missing dependencies: 'getMovieDetail', 'getReview', 'getTrailer', and 'isLoading'. Either include them or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [loadingFav]",{"range":"88","text":"89"},"Update the dependencies array to be: [getMovieDetail, getReview, getTrailer, isLoading]",{"range":"90","text":"91"},[1030,1032],"[loadingFav]",[2128,2130],"[getMovieDetail, getReview, getTrailer, isLoading]"]