[{"/Users/quyen/Downloads/film/src/index.js":"1","/Users/quyen/Downloads/film/src/App.js":"2","/Users/quyen/Downloads/film/src/reportWebVitals.js":"3","/Users/quyen/Downloads/film/src/components/NaviBar.js":"4","/Users/quyen/Downloads/film/src/components/SearchForm.js":"5","/Users/quyen/Downloads/film/src/components/MenuSide.js":"6","/Users/quyen/Downloads/film/src/pages/Homepage.js":"7","/Users/quyen/Downloads/film/src/pages/FavoList.js":"8","/Users/quyen/Downloads/film/src/pages/DetailPage.js":"9","/Users/quyen/Downloads/film/src/DataFetcher.js":"10","/Users/quyen/Downloads/film/src/components/PaginationBar.js":"11","/Users/quyen/Downloads/film/src/components/Filter.js":"12"},{"size":500,"mtime":1607240188000,"results":"13","hashOfConfig":"14"},{"size":570,"mtime":1607241748000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607240188000,"results":"16","hashOfConfig":"14"},{"size":924,"mtime":1607242358000,"results":"17","hashOfConfig":"14"},{"size":509,"mtime":1607240188000,"results":"18","hashOfConfig":"14"},{"size":323,"mtime":1607304348771,"results":"19","hashOfConfig":"14"},{"size":3493,"mtime":1607304429712,"results":"20","hashOfConfig":"14"},{"size":1837,"mtime":1607273435056,"results":"21","hashOfConfig":"14"},{"size":6638,"mtime":1607272884909,"results":"22","hashOfConfig":"14"},{"size":337,"mtime":1607240188000,"results":"23","hashOfConfig":"14"},{"size":1637,"mtime":1607249428000,"results":"24","hashOfConfig":"14"},{"size":1876,"mtime":1607275112719,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"19wun6w",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/quyen/Downloads/film/src/index.js",[],["53","54"],"/Users/quyen/Downloads/film/src/App.js",[],"/Users/quyen/Downloads/film/src/reportWebVitals.js",[],"/Users/quyen/Downloads/film/src/components/NaviBar.js",[],"/Users/quyen/Downloads/film/src/components/SearchForm.js",[],"/Users/quyen/Downloads/film/src/components/MenuSide.js",[],"/Users/quyen/Downloads/film/src/pages/Homepage.js",["55","56"],"/Users/quyen/Downloads/film/src/pages/FavoList.js",["57"],"import React, { useEffect, useState } from \"react\";\nimport NaviBar from \"../components/NaviBar\";\nimport { getMovieDetailData } from \"../DataFetcher\";\nimport { Card } from \"react-bootstrap\";\n\nconst FavoList = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const POSTER_BASE_URL = \"https://image.tmdb.org/t/p/w500/\";\n  const getFavMovies = async () => {\n    const movieIds = Object.keys(sessionStorage);\n    const movies = await Promise.all(\n      movieIds.map(async (id) => {\n        const movie = await getMovieDetailData(id);\n        console.log(movie);\n        return movie;\n      })\n    );\n\n    return movies;\n  };\n\n  const loadingFav = async () => {\n    setIsLoading(true);\n    let favMovies = await getFavMovies();\n    setMovieList(favMovies);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    loadingFav();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"nav-bar-1\">\n        <NaviBar />\n      </div>\n\n      <div className=\"control-fav\">\n        {isLoading && movieList ? (\n          <p>Loading</p>\n        ) : (\n          <div className=\"d-flex control-card-favo-list\">\n            {movieList.map((movie) => (\n              <div key={movie.id} className=\"d-flex\">\n                <div className=\"wrap-card\">\n                  <Card>\n                    <Card.Img\n                      variant=\"top\"\n                      src={`${POSTER_BASE_URL}${movie.poster_path}`}\n                    />\n                    <Card.Body>\n                      <Card.Title>{movie.original_title}</Card.Title>\n                      <Card.Text>{movie.overview}</Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport { FavoList };\n","/Users/quyen/Downloads/film/src/pages/DetailPage.js",["58"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NaviBar from \"../components/NaviBar\";\nimport { Card, Breadcrumb, Button, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { getMovieDetailData } from \"../DataFetcher\";\n\nconst DetailPage = () => {\n  const POSTER_BASE_URL = \"https://image.tmdb.org/t/p/w500/\";\n  const TRAILER_BASE_URL = \"https://www.youtube.com/embed/\";\n  const API_KEY = \"8bb27996f17866f8d8aa2ee7f2bb50aa\";\n  const [movieTrailer, setMovieTrailer] = useState(null);\n  const [movieDetail, setMovieDetail] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [reviewList, setReviewList] = useState([]);\n  const [isClick, setIsClick] = useState(false);\n  const [showTrailer, setShowTrailer] = useState(false);\n\n  const params = useParams();\n  const MOVIE_ID = params.id;\n  const handleCloseTrailer = () => {\n    setShowTrailer(false);\n  };\n\n  const handleOpenTrailer = () => {\n    setShowTrailer(true);\n  };\n\n  const getMovieDetail = async () => {\n    try {\n      setIsLoading(true);\n      const movie = await getMovieDetailData(MOVIE_ID);\n      console.log(movie);\n      setMovieDetail(movie);\n      setIsLoading(false);\n    } catch (error) {\n      window.alert(\"not found\");\n    }\n  };\n\n  const getReview = async () => {\n    try {\n      setIsLoading(true);\n\n      const API_URL = `https://api.themoviedb.org/3/movie/${MOVIE_ID}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n      const res = await fetch(API_URL);\n      const data = await res.json();\n\n      console.log(\"WHAT IS\", data);\n      setReviewList(data.results);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(\"Not found\");\n    }\n  };\n\n  const getTrailer = async () => {\n    try {\n      setIsLoading(true);\n      const API_URL = `https://api.themoviedb.org/3/movie/${MOVIE_ID}/videos?api_key=${API_KEY}&language=en-US`;\n      const res = await fetch(API_URL);\n      const data = await res.json();\n      console.log(\"movies trailer\", data.results[0].key);\n      //\n      setMovieTrailer(data.results);\n    } catch (error) {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isLoading) {\n      getMovieDetail();\n      if (isClick) setIsClick(true);\n      getTrailer();\n    } else {\n      getReview();\n    }\n  }, []);\n\n  return isLoading ? (\n    <>\n      <p>Loading</p>\n    </>\n  ) : (\n    <>\n      <div className=\"control-detailpage\">\n        <div className=\"nav-bar-1\">\n          <NaviBar />\n        </div>\n        <div className=\"link\">\n          <Breadcrumb>\n            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n            <Breadcrumb.Item href=\"#\">\n              {movieDetail.original_title}\n            </Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n        <section className=\"all-in\">\n          <div className=\"Detail-film d-flex\">\n            <div className=\"col-6 photo\">\n              <Card.Img\n                variant=\"top\"\n                src={`${POSTER_BASE_URL}${movieDetail.poster_path}`}\n              />\n            </div>\n            <div className=\"col-6 infor\">\n              <span className=\"type-film\">{movieDetail.genres[0].name}</span>\n              <div className=\"movie-title\">\n                <h1>{movieDetail.original_title}</h1>\n                <h4>{movieDetail.tagline}</h4>\n              </div>\n              <div className=\"d-flex control\">\n                <div>\n                  <i class=\"fab fa-imdb imb-icon\" aria-hidden=\"true\">\n                    <span class=\"imb-score\">{movieDetail.vote_average}</span>\n                  </i>\n                </div>\n                <div>\n                  <i class=\"fas fa-users users-icon\" aria-hidden=\"true\">\n                    <span class=\"imb-score-1\">{movieDetail.popularity}</span>\n                  </i>\n                </div>\n              </div>\n              <div className=\"text-group\">\n                <p>\n                  <b>Release Date: </b>\n                  {movieDetail.release_date}\n                </p>\n                <p>\n                  <b>Time remaining: </b>\n                  {movieDetail.runtime} minutes\n                </p>\n                <p>\n                  <b>Languages: </b>\n                  {movieDetail.spoken_languages[0].english_name}\n                </p>\n              </div>\n              <div className=\"control-fav-list\">\n                <Button className=\"button-trailer\" onClick={handleOpenTrailer}>\n                  Trailer\n                </Button>\n                <button\n                  class=\"details-action-icon\"\n                  onClick={() => {\n                    const movieAdded = sessionStorage.getItem(MOVIE_ID);\n                    if (movieAdded !== null) {\n                      window.alert(\"The movie is already added to My List\");\n                    } else {\n                      sessionStorage.setItem(MOVIE_ID, MOVIE_ID);\n                      console.log(Object.keys(sessionStorage));\n                      window.alert(\"added\");\n                    }\n                  }}\n                >\n                  <i className=\"fas fa-heart black\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"cmt\">\n          <div className=\"overview\">\n            <h2>Overview</h2>\n            <p>{movieDetail.overview}</p>\n          </div>\n          <div className=\"comment-review\">\n            <h2>Review ({reviewList.length})</h2>\n            {reviewList.map((review) => (\n              <div>\n                <h2>{review.author_details.username}</h2>\n                <p>{review.content}</p>\n              </div>\n            ))}\n          </div>\n        </section>\n      </div>\n      <Modal show={showTrailer} size=\"xl\" onHide={handleCloseTrailer}>\n        <Modal.Header closeButton>\n          <Modal.Title>{movieDetail.original_title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {movieTrailer ? (\n            <iframe\n              src={`${TRAILER_BASE_URL}${movieTrailer[0].key}`}\n              width=\"100%\"\n              height=\"900\"\n              frameBorder=\"0\"\n              allow=\"autoplay; encrypted-media\"\n              allowFullScreen\n              title=\"video\"\n            />\n          ) : (\n            <p>No Trailer Found For This Movie</p>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseTrailer}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default DetailPage;\n","/Users/quyen/Downloads/film/src/DataFetcher.js",[],"/Users/quyen/Downloads/film/src/components/PaginationBar.js",[],"/Users/quyen/Downloads/film/src/components/Filter.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":71,"column":6,"nodeType":"65","endLine":71,"endColumn":15,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":80,"column":6,"nodeType":"65","endLine":80,"endColumn":15,"suggestions":"68"},{"ruleId":"63","severity":1,"message":"69","line":31,"column":6,"nodeType":"65","endLine":31,"endColumn":8,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":81,"column":6,"nodeType":"65","endLine":81,"endColumn":8,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has missing dependencies: 'getData' and 'getSearch'. Either include them or remove the dependency array.",["76"],"React Hook useEffect has a missing dependency: 'loadingFav'. Either include it or remove the dependency array.",["77"],"React Hook useEffect has missing dependencies: 'getMovieDetail', 'getReview', 'getTrailer', 'isClick', and 'isLoading'. Either include them or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [getData, pageNum]",{"range":"87","text":"88"},"Update the dependencies array to be: [confirm, getData, getSearch]",{"range":"89","text":"90"},"Update the dependencies array to be: [loadingFav]",{"range":"91","text":"92"},"Update the dependencies array to be: [getMovieDetail, getReview, getTrailer, isClick, isLoading]",{"range":"93","text":"94"},[2118,2127],"[getData, pageNum]",[2245,2254],"[confirm, getData, getSearch]",[887,889],"[loadingFav]",[2364,2366],"[getMovieDetail, getReview, getTrailer, isClick, isLoading]"]