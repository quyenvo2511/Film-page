[{"/Users/quyen/Downloads/film/src/index.js":"1","/Users/quyen/Downloads/film/src/App.js":"2","/Users/quyen/Downloads/film/src/reportWebVitals.js":"3","/Users/quyen/Downloads/film/src/components/NaviBar.js":"4","/Users/quyen/Downloads/film/src/components/SearchForm.js":"5","/Users/quyen/Downloads/film/src/components/MenuSide.js":"6","/Users/quyen/Downloads/film/src/pages/Homepage.js":"7","/Users/quyen/Downloads/film/src/pages/FavoList.js":"8","/Users/quyen/Downloads/film/src/pages/DetailPage.js":"9","/Users/quyen/Downloads/film/src/DataFetcher.js":"10","/Users/quyen/Downloads/film/src/components/PaginationBar.js":"11","/Users/quyen/Downloads/film/src/Sorting.js":"12","/Users/quyen/Downloads/film/src/components/Filter.js":"13"},{"size":500,"mtime":1607240188000,"results":"14","hashOfConfig":"15"},{"size":570,"mtime":1607241748000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607240188000,"results":"17","hashOfConfig":"15"},{"size":924,"mtime":1607242358000,"results":"18","hashOfConfig":"15"},{"size":509,"mtime":1607240188000,"results":"19","hashOfConfig":"15"},{"size":819,"mtime":1607247522000,"results":"20","hashOfConfig":"15"},{"size":4223,"mtime":1607249984000,"results":"21","hashOfConfig":"15"},{"size":981,"mtime":1607243904000,"results":"22","hashOfConfig":"15"},{"size":6862,"mtime":1607241758000,"results":"23","hashOfConfig":"15"},{"size":337,"mtime":1607240188000,"results":"24","hashOfConfig":"15"},{"size":1637,"mtime":1607249428000,"results":"25","hashOfConfig":"15"},{"size":763,"mtime":1607245936000,"results":"26","hashOfConfig":"15"},{"size":1505,"mtime":1607248372580,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"19wun6w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/quyen/Downloads/film/src/index.js",[],["58","59"],"/Users/quyen/Downloads/film/src/App.js",[],"/Users/quyen/Downloads/film/src/reportWebVitals.js",[],"/Users/quyen/Downloads/film/src/components/NaviBar.js",[],"/Users/quyen/Downloads/film/src/components/SearchForm.js",[],"/Users/quyen/Downloads/film/src/components/MenuSide.js",["60","61","62"],"import React from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nimport Filter from \"./Filter\";\n\nconst MenuSide = ({ sortAsc, sortDesc, sortPopular, yearRange, setYearRange, ratingRange, setRatingRange  }) => {\n  return (\n    <div className=\"menuside-control d-flex\">\n      <ul className=\"menu\">\n        {/* <li className=\"nav-item\">\n          <a className=\"badge-1\" href=\"#\">\n            Top rated\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"badge-2\" href=\"#\">\n            Trending now\n          </a>\n        </li> */}\n        <Filter  sortAsc={sortAsc} sortDesc={sortDesc} sortPopular={sortPopular} yearRange={yearRange} setYearRange={setYearRange} ratingRange={ratingRange} setRatingRange={setRatingRange} />\n      </ul>\n    </div>\n  );\n};\n\nexport default MenuSide;\n","/Users/quyen/Downloads/film/src/pages/Homepage.js",["63","64"],"import NaviBar from \"../components/NaviBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SearchForm from \"../components/SearchForm\";\nimport MenuSide from \"../components/MenuSide\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport PaginationBar from \"../components/PaginationBar\";\n\nimport { sortMoviesByAtoZ, sortMoviesByZtoA, sortMoviesByPopularity} from \"../Sorting\";\n\nconst HomePage = () => {\n  const POSTER_BASE_URL = \"https://image.tmdb.org/t/p/w500/\";\n  const API_KEY = \"8bb27996f17866f8d8aa2ee7f2bb50aa\";\n  const [movieList, setMovieList] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  /// capture searchConfirm\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [pageNum, setPageNum] = useState(1);\n  const [yearRange, setYearRange] = useState({ min: 1990, max: 2020 });\n  const [ratingRange, setRatingRange] = useState({ min: 0, max: 10 });\n  const totalPage = 50;\n  ///\n\n  const history = useHistory();\n\n  const updateSearchTerm = (newSearchTerm) => {\n    setSearchTerm(newSearchTerm);\n    console.log(searchTerm);\n  };\n\n  const getData = async () => {\n    try {\n      setIsLoading(true);\n      const API_URL = `https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&page=${pageNum}`;\n      const res = await fetch(API_URL);\n      const data = await res.json();\n      console.log(data);\n      setMovieList(data.results);\n      setIsLoading(false);\n    } catch (error) {\n      window.alert(\"Not found\");\n    }\n  };\n  const performSearch = async (e) => {\n    e.preventDefault();\n    setConfirm(searchTerm);\n  };\n\n  const getSearch = async () => {\n    try {\n      setIsLoading(true);\n      console.log(\"got in \", searchTerm);\n      const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchTerm}`;\n      const res = await fetch(API_URL);\n      const data = await res.json();\n\n      console.log(\"hahaha\", data);\n      setMovieList(data.results);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(\"Not found\");\n    }\n  };\n\n  const sortAscending = () => {\n    const newList = sortMoviesByAtoZ(movieList);\n    setMovieList(newList);\n  }\n\n  const sortDescending = () => {\n    setMovieList(sortMoviesByZtoA(movieList));\n  }\n\n  const sortByPopularity = () => {\n    setMovieList(sortMoviesByPopularity(movieList));\n  }\n\n  useEffect(() => {\n    getData();\n  }, [pageNum])\n\n  useEffect(() => {\n    getData();\n    if (confirm) {\n      getSearch();\n    } else {\n      getData();\n    }\n  }, [confirm]);\n\n  const handleCardClick = (movieId) => {\n    history.push(`/movies/${movieId}`);\n  };\n\n  return (\n    <div className=\"container-1\">\n      <section className=\"search-section\">\n        <NaviBar />\n        <SearchForm\n          performSearch={performSearch}\n          updateSearchTerm={updateSearchTerm}\n        />\n      </section>\n\n      <div className=\"row\">\n        <div className=\"left-side col-2\">\n          <MenuSide sortAsc={sortAscending} sortDesc={sortDescending} sortPopular={sortByPopularity} yearRange={yearRange} setYearRange={setYearRange} ratingRange={ratingRange} setRatingRange={setRatingRange} />\n        </div>\n        <div className=\"right-side col-10 d-flex\">\n          {isLoading ? <p>Loading</p> : movieList?.filter(item => {\n            const releaseDate = new Date(item.release_date);\n            const year = releaseDate.getFullYear();\n            const rating = item.vote_average;\n\n            return year <= yearRange.max && year >= yearRange.min && rating >= ratingRange.min && rating <= ratingRange.max;\n          }).map((item) => (\n            <Card\n              className=\"every-card\"\n              onClick={() => handleCardClick(item.id)}\n            >\n              <Card.Img\n                variant=\"top\"\n                src={`${POSTER_BASE_URL}${item.poster_path}`}\n              />\n            </Card>\n          ))}\n        </div>\n        <PaginationBar\n          pageNum={pageNum}\n          totalPageNum={totalPage}\n          setPageNum={setPageNum}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/quyen/Downloads/film/src/pages/FavoList.js",[],"/Users/quyen/Downloads/film/src/pages/DetailPage.js",["65","66"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NaviBar from \"../components/NaviBar\";\nimport { Card, Breadcrumb, Button, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { getMovieDetailData } from \"../DataFetcher\";\n\nconst DetailPage = () => {\n  const POSTER_BASE_URL = \"https://image.tmdb.org/t/p/w500/\";\n  const TRAILER_BASE_URL = \"https://www.youtube.com/embed/\";\n  const API_KEY = \"8bb27996f17866f8d8aa2ee7f2bb50aa\";\n  const [movieTrailer, setMovieTrailer] = useState(null);\n  const [movieDetail, setMovieDetail] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [reviewList, setReviewList] = useState([]);\n\n  const [showTrailer, setShowTrailer] = useState(false);\n\n  const params = useParams();\n  const MOVIE_ID = params.id;\n  const handleCloseTrailer = () => {\n    setShowTrailer(false);\n  }\n\n  const handleOpenTrailer = () => {\n    // trailer(movieDetail.id);\n    setShowTrailer(true);\n  }\n\n  // const trailer = async (movie_id) => {\n  //   // console.log(\"here\", movie_id);\n  //   try {\n  //     setIsLoading(true);\n  //     const API_URL = `https://api.themoviedb.org/3/movie/${movie_id}/videos?api_key=${API_KEY}&language=en-US`;\n  //     const res = await fetch(API_URL);\n  //     const data = await res.json();\n  //     console.log(\"movies trailer\", data.results[0].key);\n  //     //\n  //     setMovieTrailer(data.results);\n  //     //\n  //     setIsLoading(false);\n  //   } catch (error) {\n  //     setIsLoading(false);\n  //   }\n  // };\n\n  const getMovieDetail = async () => {\n    try {\n      setIsLoading(true);\n      const movie = await getMovieDetailData(MOVIE_ID);\n      console.log(movie);\n      setMovieDetail(movie);\n      setIsLoading(false);\n    } catch (error) {\n      window.alert(\"not found\");\n    }\n  };\n\n  const getReview = async () => {\n    try {\n      setIsLoading(true);\n\n      const API_URL = `https://api.themoviedb.org/3/movie/${MOVIE_ID}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n      const res = await fetch(API_URL);\n      const data = await res.json();\n\n      console.log(\"WHAT IS\", data);\n      setReviewList(data.results);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(\"Not found\");\n    }\n  };\n\n  const getTrailer = async () => {\n    try {\n      setIsLoading(true);\n      const API_URL = `https://api.themoviedb.org/3/movie/${MOVIE_ID}/videos?api_key=${API_KEY}&language=en-US`;\n      const res = await fetch(API_URL);\n      const data = await res.json();\n      console.log(\"movies trailer\", data.results[0].key);\n      //\n      setMovieTrailer(data.results);\n      //\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (isLoading) {\n      getMovieDetail();\n      getReview();\n      getTrailer();\n    }\n  }, []);\n\n  return isLoading ? (\n    <>\n      <p>Loading</p>\n    </>\n  ) : (\n    <>\n      <div className=\"control-detailpage\">\n        <div className=\"nav-bar-1\">\n          <NaviBar />\n        </div>\n        <div class=\"link\">\n          <Breadcrumb>\n            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n            <Breadcrumb.Item href=\"#\">\n              {movieDetail.original_title}\n            </Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n        <section className=\"all-in\">\n          <div className=\"Detail-film d-flex\">\n            <div className=\"col-6 photo\">\n              <Card.Img\n                variant=\"top\"\n                src={`${POSTER_BASE_URL}${movieDetail.poster_path}`}\n              />\n            </div>\n            <div className=\"col-6 infor\">\n              <span className=\"type-film\">{movieDetail.genres[0].name}</span>\n              <div className=\"movie-title\">\n                <h1>{movieDetail.original_title}</h1>\n                <h4>{movieDetail.tagline}</h4>\n              </div>\n              <div className=\"d-flex control\">\n                <div>\n                  <i class=\"fab fa-imdb imb-icon\" aria-hidden=\"true\">\n                    <span class=\"imb-score\">{movieDetail.vote_average}</span>\n                  </i>\n                </div>\n                <div>\n                  <i class=\"fas fa-users users-icon\" aria-hidden=\"true\">\n                    <span class=\"imb-score-1\">{movieDetail.popularity}</span>\n                  </i>\n                </div>\n              </div>\n              <div className=\"text-group\">\n                <p>\n                  <b>Release Date: </b>\n                  {movieDetail.release_date}\n                </p>\n                <p>\n                  <b>Time remaining: </b>\n                  {movieDetail.runtime} minutes\n                </p>\n                <p>\n                  <b>Languages: </b>\n                  {movieDetail.spoken_languages[0].english_name}\n                </p>\n              </div>\n              <div className=\"control-fav-list\">\n                <Button\n                  className=\"button-trailer\"\n                  onClick={handleOpenTrailer}\n                >\n                  Trailer\n                </Button>\n                <button class=\"details-action-icon\" onClick={() => {\n                  sessionStorage.setItem(MOVIE_ID, MOVIE_ID);\n                  console.log(Object.keys(sessionStorage));\n                }}>\n                  <i class=\"fas fa-heart black\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"cmt\">\n          <div className=\"overview\">\n            <h2>Overview</h2>\n            <p>{movieDetail.overview}</p>\n          </div>\n          <div className=\"comment-review\">\n            <h2>Review ({reviewList.length})</h2>\n            {reviewList.map(review => \n              <div>\n                  <h2>{review.author_details.username}</h2>\n                  <p>{review.content}</p>\n              </div>\n            )}\n          </div>\n        </section>\n      </div>\n      <Modal show={showTrailer} onHide={handleCloseTrailer}>\n          <Modal.Header closeButton>\n            <Modal.Title>{movieDetail.original_title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {movieTrailer ? (\n                  <iframe\n                    src={`${TRAILER_BASE_URL}${movieTrailer[0].key}`}\n                    frameBorder=\"0\"\n                    allow=\"autoplay; encrypted-media\"\n                    allowFullScreen\n                    title=\"video\"\n                  />\n                ) : (\n                  <p>No Trailer Found For This Movie</p>\n              )}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseTrailer}>\n              Close\n            </Button>\n          </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default DetailPage;","/Users/quyen/Downloads/film/src/DataFetcher.js",[],"/Users/quyen/Downloads/film/src/components/PaginationBar.js",[],"/Users/quyen/Downloads/film/src/Sorting.js",[],"/Users/quyen/Downloads/film/src/components/Filter.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":9,"column":11,"nodeType":"77","endLine":9,"endColumn":43},{"ruleId":"75","severity":1,"message":"76","line":14,"column":11,"nodeType":"77","endLine":14,"endColumn":43},{"ruleId":"71","severity":1,"message":"78","line":13,"column":10,"nodeType":"73","messageId":"74","endLine":13,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":69,"column":6,"nodeType":"81","endLine":69,"endColumn":15,"suggestions":"82"},{"ruleId":"71","severity":1,"message":"83","line":17,"column":10,"nodeType":"73","messageId":"74","endLine":17,"endColumn":20},{"ruleId":"79","severity":1,"message":"84","line":71,"column":6,"nodeType":"81","endLine":71,"endColumn":8,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getData' and 'getSearch'. Either include them or remove the dependency array.","ArrayExpression",["88"],"'reviewList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMovieDetail' and 'isLoading'. Either include them or remove the dependency array.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [confirm, getData, getSearch]",{"range":"94","text":"95"},"Update the dependencies array to be: [getMovieDetail, isLoading]",{"range":"96","text":"97"},[2079,2088],"[confirm, getData, getSearch]",[2115,2117],"[getMovieDetail, isLoading]"]